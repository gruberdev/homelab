kind: pipeline
name: validate
type: docker

platform:
  os: linux
  arch: amd64
node:
  server: vps
  arm: no
  docker: yes

trigger:
  event:
    include:
      - pull_request
    exclude:
      - push

clone:
  disable: true

steps:
  - name: clone
    image: alpine/git
    commands:
    - git clone https://github.com/gruberdev/homelab.git .
    - git checkout $DRONE_COMMIT

  - name: skip
    image: ghcr.io/joshdk/drone-skip-pipeline:v0.2.0
    failure: ignore
    environment:
      GITHUB_TOKEN:
        from_secret: github_token
    settings:
      rules:
      - apps/
      touch: .skip-pipeline
    depends_on:
      - clone

  - name: k8s-resources
    image: deck15/kubeval-tools:latest
    commands:
      - find . -maxdepth 10 -name \*svc.yaml -exec kubeval --exit-on-error -v 1.24.4 -s https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/ {} \;
      - find . -maxdepth 10 -name deployment.yaml -exec kubeval --exit-on-error -v 1.24.4 -s https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/ {} \;
      - find . -maxdepth 10 -name \*secret.yaml -exec kubeval --exit-on-error -v 1.24.4 -s https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/ {} \;
      - find . -maxdepth 10 -name cm.yaml -exec kubeval --exit-on-error -v 1.24.4 -s https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/ {} \;
      - find . -maxdepth 10 -name pvc.yaml -exec kubeval --exit-on-error -v 1.24.4 -s https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/ {} \;
      - find . -maxdepth 10 -name pv.yaml -exec kubeval --exit-on-error -v 1.24.4 -s https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/ {} \;
      - find . -maxdepth 10 -name role.yaml -exec kubeval --exit-on-error -v 1.24.4 -s https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/ {} \;
      - find . -maxdepth 10 -name sa.yaml -exec kubeval --exit-on-error -v 1.24.4 -s https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/ {} \;
      - find . -maxdepth 10 -name cr.yaml -exec kubeval --exit-on-error -v 1.24.4 -s https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/ {} \;
      - find . -maxdepth 10 -name rb.yaml -exec kubeval --exit-on-error -v 1.24.4 -s https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/ {} \;
    depends_on:
      - skip

  - name: Successful Step GH Comment
    image: ghcr.io/joshdk/drone-github-comment:v0.1.0
    settings:
      step: k8s-resources
    environment:
      PLUGIN_STAGE: validate
      DRONE_TOKEN:
        from_secret: drone_token
      GITHUB_TOKEN:
        from_secret: github_token
    depends_on:
      - k8s-resources
    when:
      status:
        - success

  - name: Failure Step GH Comment
    image: ghcr.io/joshdk/drone-github-comment:v0.1.0
    settings:
      step: k8s-resources
    environment:
      PLUGIN_STAGE: validate
      DRONE_TOKEN:
        from_secret: drone_token
      GITHUB_TOKEN:
        from_secret: github_token
    depends_on:
      - k8s-resources
    when:
      status:
        - failure

---

kind: pipeline
name: Lint
type: docker

platform:
  os: linux
  arch: amd64
node:
  server: vps
  arm: no
  docker: yes

trigger:
  event:
    include:
      - push
    exclude:
      - pull_request
  branch:
    - main

steps:
  - name: YAML Validate
    image: sdesbure/yamllint:latest
    commands:
      - yamllint -c ./.yamllint .

  - name: Link Check
    image: ghcr.io/tcort/markdown-link-check:stable

# ---

# kind: pipeline
# name: k3d CI
# type: docker

# platform:
#   os: linux
#   arch: amd64
# node:
#   server: home
#   arm: no
#   docker: yes

# depends_on:
#   - Linters

# trigger:
#   event:
#     include:
#       - push
#     exclude:
#       - pull_request
#   branch:
#     - main

# steps:
#   - name: Create Namespaces
#     image: bitnami/kubectl:1.24.4
#     user: root
#     commands:
#       - export KUBECONFIG=kubeconfig-$${DRONE_BUILD_STARTED}.yaml
#       - until test -f $${KUBECONFIG}; do sleep 1s; done
#       - kubectl config view
#       - kubectl get pods --all-namespaces
#       - kubectl create namespace databases

#   - name: Install PostgreSQL
#     image: bitnami/kubectl:1.24.4
#     user: root
#     commands:
#       - kubectl apply -k ./apps/data/postgres
#     depends_on:
#       - Create Namespaces

#   - name: Finalize
#     image: rancher/k3d:5.3.0-dind
#     privileged: true
#     user: root
#     commands:
#       - k3d cluster delete --config test/k3d.yaml
#     depends_on:
#       - Create Namespaces
#       - Install PostgreSQL

# services:
#   - name: k3dsvc
#     image: rancher/k3d:5.3.0-dind
#     privileged: true
#     commands:
#       - nohup dockerd-entrypoint.sh &
#       - until docker ps 2>&1 > /dev/null; do sleep 1s; done
#       - k3d cluster create --config test/k3d.yaml --api-port k3dsvc:6432
#       - until kubectl get deployment coredns -n kube-system -o go-template='{{.status.availableReplicas}}' | grep -v -e '<no value>'; do sleep 1s; done
#       - k3d kubeconfig get drone > kubeconfig-$${DRONE_BUILD_STARTED}.yaml
#       - printf "\nk3d is ready! \n\n"
#       - tail -f /dev/null
