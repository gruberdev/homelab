---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wakapi-server
  labels:
    app: wakapi-server
  annotations:
    link.argocd.argoproj.io/external-link: http://wakapi
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: wakapi-server
  template:
    metadata:
      labels:
        app: wakapi-server
    spec:
      containers:
        - name: wakapi
          image: ghcr.io/muety/wakapi:latest
          env:
            - name: WAKAPI_DB_USER
              valueFrom: { secretKeyRef: { name: trackinguser.db-wakapi.credentials.postgresql.acid.zalan.do, key: username } }
            - name: WAKAPI_DB_PASSWORD
              valueFrom: { secretKeyRef: { name: trackinguser.db-wakapi.credentials.postgresql.acid.zalan.do, key: password } }
          envFrom:
            - configMapRef:
                name: wakapi-cm
            - secretRef:
                name: wakapi-vars
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          startupProbe:
            tcpSocket:
              port: 3000
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            initialDelaySeconds: 60
            failureThreshold: 30
          livenessProbe:
            tcpSocket:
              port: 3000
            timeoutSeconds: 5
            periodSeconds: 15
            initialDelaySeconds: 35
          readinessProbe:
            tcpSocket:
              port: 3000
            timeoutSeconds: 2
            periodSeconds: 5
            initialDelaySeconds: 10
          resources:
            requests:
              cpu: "300m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          volumeMounts:
            - name: config-storage
              mountPath: /data
      volumes:
        - name: config-storage
          persistentVolumeClaim:
            claimName: wakapi-storage
