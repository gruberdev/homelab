apiVersion: apps/v1
kind: Deployment
metadata:
  name: linkedin-bridge
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: linkedin-bridge
  template:
    metadata:
      labels:
        app: linkedin-bridge
    spec:
      initContainers:
        - name: load-config
          image: docker.io/grubertech/envsubst:v1.2.0
          imagePullPolicy: IfNotPresent
          command: ["sh"]
          args:
            - -c
            - |
              envsubst -no-empty -i /template/linkedin-config.yaml.tmpl -o /tmp/linkedin-config.yaml \
              && cp -f /tmp/linkedin-config.yaml /data/config.yaml \
              && envsubst -no-empty -i /template/linkedin.yaml.tmpl -o /tmp/linkedin.yaml \
              && cp -f /tmp/linkedin.yaml /bridges/linkedin.yaml
          env:
          - name: POSTGRES_USER
            valueFrom: { secretKeyRef: { name: synapse.db-matrix.credentials.postgresql.acid.zalan.do, key: username } }
          - name: POSTGRES_PASSWORD
            valueFrom: { secretKeyRef: { name: synapse.db-matrix.credentials.postgresql.acid.zalan.do, key: password } }
          - name: SHARED_SECRET
            valueFrom: { secretKeyRef: { name: synapse-shared, key: SHARED_SECRET } }
          - name: AS_TOKEN
            valueFrom: { secretKeyRef: { name: synapse-shared, key: AS_linkedin_TOKEN } }
          - name: HS_TOKEN
            valueFrom: { secretKeyRef: { name: synapse-shared, key: HS_linkedin_TOKEN } }
          - name: INSTA_SEED
            valueFrom: { secretKeyRef: { name: synapse-shared, key: INSTA_SEED } }
          volumeMounts:
            - name: config
              mountPath: /data
            - name: temp-dir
              mountPath: /tmp
            - name: bridges
              mountPath: /bridges
            - name: template
              mountPath: /template/linkedin-config.yaml.tmpl
              subPath: linkedin-config.yaml.tmpl
              readOnly: true
            - name: template
              mountPath: /template/linkedin.yaml.tmpl
              subPath: linkedin.yaml.tmpl
              readOnly: true
          resources:
            limits:
              cpu: 320m
              memory: 512Mi
            requests:
              cpu: 150m
              memory: 512Mi
      containers:
        - name: bridge
          image: ghcr.io/beeper/linkedin:168399d77f81d5c3bcbb22fb40ced814774ec770
          imagePullPolicy: IfNotPresent
          command: ["sh"]
          env:
            - name: MAUTRIX_DIRECT_STARTUP
              value: "true"
          args:
            - -c
            - |
              python3 -m linkedin_matrix \
              -n -c "/data/config.yaml"
          ports:
            - name: http
              containerPort: 8202
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 8202
            periodSeconds: 15
            initialDelaySeconds: 30
          readinessProbe:
            tcpSocket:
              port: 8202
            periodSeconds: 5
            initialDelaySeconds: 10
          startupProbe:
            tcpSocket:
              port: 8202
            periodSeconds: 30
            initialDelaySeconds: 60
          volumeMounts:
            - name: config
              mountPath: /data
          resources:
            limits:
              cpu: 320m
              memory: 512Mi
            requests:
              cpu: 200m
              memory: 256Mi
      volumes:
      - name: template
        configMap:
          name: linkedin-bridge-config
      - name: temp-dir
        emptyDir: {}
      - name: config
        persistentVolumeClaim:
          claimName: linkedin-bridge-data
      - name: bridges
        persistentVolumeClaim:
          claimName: registration-linkedin-matrix
