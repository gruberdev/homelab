apiVersion: v1
kind: ConfigMap
metadata:
  name: whats-bridge-config
data:
  whats.yaml.tmpl: |
    id: whatsapp
    url: 'http://whats-bridge.matrix1.svc.cluster.local:8200'
    as_token: ${AS_TOKEN}
    hs_token: ${HS_TOKEN}
    sender_localpart: JIwoVfi2DvXlo3T5TBTctbpfI8KpqWAp
    rate_limited: false
    namespaces:
      users:
        - regex: '^@whatsappbot:matrix\.gruber\.dev\.br$'
          exclusive: false
        - regex: '^@whatsapp_.*:matrix\.gruber\.dev\.br$'
          exclusive: false
    de.sorunome.msc2409.push_ephemeral: true
    push_ephemeral: true
  config.yaml.tmpl: |
    homeserver:
      address: 'http://matrix-matrix-synapse.matrix1.svc.cluster.local:8008'
      domain: matrix.gruber.dev.br
      software: standard
      status_endpoint: null
      message_send_checkpoint_endpoint: null
      async_media: false
      websocket: false
      ping_interval_seconds: 0
    appservice:
      address: 'http://whats-bridge.matrix1.svc.cluster.local:8200'
      hostname: 0.0.0.0
      port: 8200
      database:
        type: postgres
        uri: >-
          postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db-matrix.matrix1.svc.cluster.local:5432/whats?sslmode=require
        max_open_conns: 20
        max_idle_conns: 2
        max_conn_idle_time: null
        max_conn_lifetime: null
      id: whatsapp
      bot:
        username: whatsappbot
        displayname: WhatsApp bridge bot
        avatar: 'mxc://maunium.net/NeXNQarUbrlYBiPCpprYsRqr'
      ephemeral_events: true
      async_transactions: false
      as_token: ${AS_TOKEN}
      hs_token: ${HS_TOKEN}
    segment_key: null
    segment_user_id: null
    metrics:
      enabled: true
      listen: '127.0.0.1:8001'
    whatsapp:
      os_name: Mautrix-WhatsApp bridge
      browser_name: unknown
    bridge:
      username_template: 'whatsapp_{{.}}'
      displayname_template: '{{or .BusinessName .PushName .JID}} (WA)'
      personal_filtering_spaces: false
      delivery_receipts: true
      message_status_events: false
      message_error_notices: true
      call_start_notices: true
      identity_change_notices: true
      portal_message_buffer: 128
      history_sync:
        backfill: true
        max_initial_conversations: -1
        message_count: 50
        request_full_sync: false
        full_sync_config:
          days_limit: null
          size_mb_limit: null
          storage_quota_mb: null
        unread_hours_threshold: 0
        media_requests:
          auto_request_media: true
          request_method: immediate
          request_local_time: 120
        immediate:
          worker_count: 1
          max_events: 10
        deferred:
          - start_days_ago: 7
            max_batch_events: 20
            batch_delay: 5
          - start_days_ago: 30
            max_batch_events: 50
            batch_delay: 10
          - start_days_ago: 90
            max_batch_events: 100
            batch_delay: 10
          - start_days_ago: -1
            max_batch_events: 500
            batch_delay: 10
      user_avatar_sync: true
      bridge_matrix_leave: true
      sync_with_custom_puppets: false
      sync_direct_chat_list: true
      sync_manual_marked_unread: true
      default_bridge_receipts: true
      default_bridge_presence: true
      send_presence_on_typing: true
      force_active_delivery_receipts: false
      double_puppet_server_map:
        matrix.gruber.dev.br: 'http://matrix-matrix-synapse.matrix1.svc.cluster.local:8008'
      double_puppet_allow_discovery: true
      login_shared_secret_map:
        matrix.gruber.dev.br: '${SHARED_SECRET}'
      private_chat_portal_meta: default
      parallel_member_sync: false
      bridge_notices: true
      resend_bridge_info: true
      mute_bridging: false
      archive_tag: null
      pinned_tag: null
      tag_only_on_create: true
      enable_status_broadcast: true
      disable_status_broadcast_send: true
      mute_status_broadcast: true
      status_broadcast_tag: m.lowpriority
      whatsapp_thumbnail: false
      allow_user_invite: true
      federate_rooms: true
      disable_bridge_alerts: false
      crash_on_stream_replaced: false
      url_previews: true
      caption_in_message: false
      extev_polls: false
      cross_room_replies: false
      disable_reply_fallbacks: false
      message_handling_timeout:
        error_after: null
        deadline: 120s
      command_prefix: '!wa'
      management_room_text:
        welcome: 'Hello, I''m a WhatsApp bridge bot.'
        welcome_connected: Use `help` for help.
        welcome_unconnected: Use `help` for help or `login` to log in.
        additional_help: ''
      encryption:
        allow: false
        default: false
        appservice: true
        require: false
        allow_key_sharing: true
        plaintext_mentions: false
        delete_keys:
          delete_outbound_on_ack: false
          dont_store_outbound: false
          ratchet_on_decrypt: false
          delete_fully_used_on_decrypt: false
          delete_prev_on_new_session: false
          delete_on_device_delete: false
          periodically_delete_expired: false
          delete_outdated_inbound: false
        verification_levels:
          receive: unverified
          send: unverified
          share: cross-signed-tofu
        rotation:
          enable_custom: false
          milliseconds: 604800000
          messages: 100
          disable_device_change_key_rotation: false
      provisioning:
        prefix: /_matrix/provision
        shared_secret: '${SHARED_SECRET}'
      permissions:
        '*': relaybot
        matrix.gruber.dev.br: user
        '@gruber:matrix.gruber.dev.br': admin
      relay:
        enabled: true
        admin_only: true
        message_formats:
          m.text: '<b>{{ .Sender.Displayname }}</b>: {{ .Message }}'
          m.notice: '<b>{{ .Sender.Displayname }}</b>: {{ .Message }}'
          m.emote: '* <b>{{ .Sender.Displayname }}</b> {{ .Message }}'
          m.file: '<b>{{ .Sender.Displayname }}</b> sent a file'
          m.image: '<b>{{ .Sender.Displayname }}</b> sent an image'
          m.audio: '<b>{{ .Sender.Displayname }}</b> sent an audio file'
          m.video: '<b>{{ .Sender.Displayname }}</b> sent a video'
          m.location: '<b>{{ .Sender.Displayname }}</b> sent a location'
    logging:
      min_level: debug
      writers:
        - type: stdout
          format: pretty-colored
    version: 2
