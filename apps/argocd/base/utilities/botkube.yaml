apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: botkube
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: monitoring
  source:
    repoURL: https://charts.botkube.io
    chart: botkube
    targetRevision: v0.16.0
    helm:
      releaseName: botkube
      values: |
        image:
          registry: ghcr.io
          repository: kubeshop/botkube
          pullPolicy: IfNotPresent
          tag: v0.16.0
        podSecurityPolicy:
          enabled: false
        securityContext:
          runAsUser: 101
          runAsGroup: 101
        containerSecurityContext:
          privileged: false
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        kubeconfig:
          enabled: true
          existingSecret: "botkube-kubeconfig"
        actions:
          'describe-created-resource':
            enabled: true
            displayName: "Describe created resource"
            command: "kubectl describe {{ .Event.TypeMeta.Kind | lower }}{{ if .Event.Namespace }} -n {{ .Event.Namespace }}{{ end }} {{ .Event.Name }}"
            bindings:
              sources:
                - k8s-create-events
              executors:
                - kubectl-read-only
          'show-logs-on-error':
            enabled: true
            displayName: "Show logs on error"
            command: "kubectl logs {{ .Event.TypeMeta.Kind | lower }}/{{ .Event.Name }} -n {{ .Event.Namespace }}"
            bindings:
              sources:
                - k8s-err-with-logs-events
              executors:
                - kubectl-read-only
        sources:
          'k8s-recommendation-events':
            displayName: "Kubernetes Recommendations"
            kubernetes:
              recommendations:
                pod:
                  noLatestImageTag: true
                  labelsSet: true
                ingress:
                  backendServiceValid: true
                  tlsSecretValid: true

          'k8s-all-events':
            displayName: "Kubernetes Info"
            kubernetes:
              namespaces: &k8s-events-namespaces
                include:
                  - ".*"
              event:
                types:
                  - create
                  - delete
                  - error
                reason: ""
                message: ""

              annotations: {}
              labels: {}
              resources:
                - type: v1/pods
                - type: v1/services
                - type: networking.k8s.io/v1/ingresses
                - type: v1/nodes
                - type: v1/namespaces
                - type: v1/persistentvolumes
                - type: v1/persistentvolumeclaims
                - type: v1/configmaps
                - type: rbac.authorization.k8s.io/v1/roles
                - type: rbac.authorization.k8s.io/v1/rolebindings
                - type: rbac.authorization.k8s.io/v1/clusterrolebindings
                - type: rbac.authorization.k8s.io/v1/clusterroles
                - type: apps/v1/daemonsets
                  event: # Overrides 'source'.kubernetes.event
                    types:
                      - create
                      - update
                      - delete
                      - error
                  updateSetting:
                    includeDiff: true
                    fields:
                      - spec.template.spec.containers[*].image
                      - status.numberReady
                - type: batch/v1/jobs
                  event: # Overrides 'source'.kubernetes.event
                    types:
                      - create
                      - update
                      - delete
                      - error
                  updateSetting:
                    includeDiff: true
                    fields:
                      - spec.template.spec.containers[*].image
                      - status.conditions[*].type
                - type: apps/v1/deployments
                  event: # Overrides 'source'.kubernetes.event
                    types:
                      - create
                      - update
                      - delete
                      - error
                  updateSetting:
                    includeDiff: true
                    fields:
                      - spec.template.spec.containers[*].image
                      - status.availableReplicas
                - type: apps/v1/statefulsets
                  event: # Overrides 'source'.kubernetes.event
                    types:
                      - create
                      - update
                      - delete
                      - error
                  updateSetting:
                    includeDiff: true
                    fields:
                      - spec.template.spec.containers[*].image
                      - status.readyReplicas
          'k8s-err-events':
            displayName: "Kubernetes Errors"
            kubernetes:
              namespaces: *k8s-events-namespaces
              event:
                types:
                  - error
              resources:
                - type: v1/pods
                - type: v1/services
                - type: networking.k8s.io/v1/ingresses
                - type: v1/nodes
                - type: v1/namespaces
                - type: v1/persistentvolumes
                - type: v1/persistentvolumeclaims
                - type: v1/configmaps
                - type: rbac.authorization.k8s.io/v1/roles
                - type: rbac.authorization.k8s.io/v1/rolebindings
                - type: rbac.authorization.k8s.io/v1/clusterrolebindings
                - type: rbac.authorization.k8s.io/v1/clusterroles
                - type: apps/v1/deployments
                - type: apps/v1/statefulsets
                - type: apps/v1/daemonsets
                - type: batch/v1/jobs
          'k8s-err-with-logs-events':
            displayName: "Kubernetes Errors for resources with logs"
            kubernetes:
              namespaces: *k8s-events-namespaces
              event:
                types:
                  - error
              resources:
                - type: v1/pods
                - type: apps/v1/deployments
                - type: apps/v1/statefulsets
                - type: apps/v1/daemonsets
                - type: batch/v1/jobs
          'k8s-create-events':
            displayName: "Kubernetes Resource Created Events"
            kubernetes:
              namespaces: *k8s-events-namespaces
              event:
                # -- Lists all event types to be watched.
                types:
                  - create
              resources:
                - type: v1/pods
                - type: v1/services
                - type: networking.k8s.io/v1/ingresses
                - type: v1/nodes
                - type: v1/namespaces
                - type: v1/configmaps
                - type: apps/v1/deployments
                - type: apps/v1/statefulsets
                - type: apps/v1/daemonsets
                - type: batch/v1/jobs
        filters:
          kubernetes:
            objectAnnotationChecker: true
            nodeEventsChecker: true
        executors:
          'kubectl-read-only':
            ## Kubectl executor configuration.
            kubectl:
              namespaces:
                include:
                  - ".*"
                exclude: []
              enabled: true
              ## List of allowed `kubectl` commands.
              commands:
                verbs: ["api-resources", "api-versions", "cluster-info", "describe", "explain", "get", "logs", "top"]
                resources: ["deployments", "pods", "namespaces", "daemonsets", "statefulsets", "storageclasses", "nodes", "configmaps", "services", "ingresses"]
              defaultNamespace: default
              restrictAccess: false
        existingCommunicationsSecretName: "botkube-vars"
        communications: {}
        settings:
          clusterName: default
          lifecycleServer:
            enabled: true
            port: 2113
          upgradeNotifier: true
          log:
            level: info
            disableColors: false
          systemConfigMap:
            name: botkube-system
          persistentConfig:
            startup:
              configMap:
                name: botkube-startup-config
                annotations: {}
              fileName: "_startup_state.yaml"
            runtime:
              configMap:
                name: botkube-runtime-config
                annotations: {}
              fileName: "_runtime_state.yaml"
        ssl:
          enabled: false
          existingSecretName: ""
          cert: ""
        service:
          name: metrics
          port: 2112
          targetPort: 2112
        ingress:
          create: false
          annotations:
            kubernetes.io/ingress.class: nginx
          host: 'HOST'
          tls:
            enabled: false
            secretName: ''
        serviceMonitor:
          enabled: false
          interval: 10s
          path: /metrics
          port: metrics
          labels: {}
        deployment:
          annotations: {}
        replicaCount: 1
        extraAnnotations: {}
        extraLabels: {}
        priorityClassName: ""
        nameOverride: ""
        fullnameOverride: ""
        resources:
          limits:
            cpu: 150m
            memory: 350Mi
          requests:
            cpu: 50m
            memory: 128Mi
        extraEnv: []
        extraVolumes: []
        extraVolumeMounts: []
        nodeSelector:
          kubernetes.io/hostname: node-one
        tolerations: []
        affinity: {}
        rbac:
          create: true
          rules:
            - apiGroups: ["*"]
              resources: ["*"]
              verbs: ["get", "watch", "list"]
        serviceAccount:
          create: true
          name: ""
          annotations: {}
        extraObjects: []
        analytics:
          disable: true
        configWatcher:
          enabled: true
          tmpDir: "/tmp/watched-cfg/"
          initialSyncTimeout: 0
          image:
            registry: ghcr.io
            repository: kubeshop/k8s-sidecar # kiwigrid/k8s-sidecar:1.19.5 - see https://github.com/kubeshop/k8s-sidecar/pull/1
            tag: ignore-initial-events
            pullPolicy: IfNotPresent

  destination:
    namespace: monitoring
    name: in-cluster
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true
    syncOptions:
    - Validate=false
    - CreateNamespace=false
    - PrunePropagationPolicy=foreground
    - PruneLast=false
    - ApplyOutOfSyncOnly=false
    - Prune=true
    retry:
      limit: 5
      backoff:
        duration: 20s
        factor: 2
        maxDuration: 15m
