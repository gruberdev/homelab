apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: agones
spec:
  project: apps
  source:
    repoURL: https://github.com/googleforgames/agones.git
    targetRevision: release-1.31.0
    path: install/helm/agones
    helm:
      skipCrds: true
      releaseName: agones
      values: |
        agones:
          allocator:
            affinity:
              nodeAffinity:
                preferredDuringSchedulingIgnoredDuringExecution:
                - preference:
                    matchExpressions:
                    - key: agones.dev/agones-system
                      operator: Exists
                  weight: 1
            allocationBatchWaitTime: 500ms
            apiServerQPS: 400
            apiServerQPSBurst: 500
            disableMTLS: false
            disableSecretCreation: false
            disableTLS: false
            generateClientTLS: true
            generateTLS: true
            healthCheck:
              failureThreshold: 3
              initialDelaySeconds: 3
              periodSeconds: 3
              timeoutSeconds: 1
            install: true
            logLevel: info
            pdb:
              enabled: false
              minAvailable: 1
            remoteAllocationTimeout: 10s
            replicas: 1
            resources:
              limits:
                cpu: 400m
                memory: 600Mi
              requests:
                cpu: 100m
                memory: 256Mi
            service:
              grpc:
                enabled: true
                nodePort: 30300
                port: 4443
                portName: grpc
                targetPort: 8443
              http:
                enabled: true
                nodePort: 30564
                port: 1443
                portName: https
                targetPort: 8443
              name: agones-allocator
              serviceType: NodePort
            serviceMetrics:
              http:
                enabled: true
                port: 8080
                portName: http
              name: agones-allocator-metrics-service
            tolerations:
            - effect: NoExecute
              key: agones.dev/agones-system
              operator: Equal
              value: "true"
            totalRemoteAllocationTimeout: 30s
          cloudProduct: auto
          controller:
            affinity:
              nodeAffinity:
                preferredDuringSchedulingIgnoredDuringExecution:
                - preference:
                    matchExpressions:
                    - key: agones.dev/agones-system
                      operator: Exists
                  weight: 1
            allocationApiService:
              disableCaBundle: false
            allocationBatchWaitTime: 500ms
            apiServerQPS: 400
            apiServerQPSBurst: 500
            disableSecret: false
            generateTLS: true
            healthCheck:
              failureThreshold: 3
              initialDelaySeconds: 30
              periodSeconds: 5
              timeoutSeconds: 1
            http:
              port: 8080
            logLevel: info
            mutatingWebhook:
              disableCaBundle: false
            numWorkers: 100
            pdb:
              minAvailable: 1
            persistentLogs: true
            persistentLogsSizeLimitMB: 10000
            replicas: 1
            safeToEvict: false
            tolerations:
            - effect: NoExecute
              key: agones.dev/agones-system
              operator: Equal
              value: "true"
            validatingWebhook:
              disableCaBundle: false
          crds:
            cleanupOnDelete: true
            install: false
          createPriorityClass: true
          extensions:
            affinity:
              nodeAffinity:
                preferredDuringSchedulingIgnoredDuringExecution:
                - preference:
                    matchExpressions:
                    - key: agones.dev/agones-system
                      operator: Exists
                  weight: 1
            allocationApiService:
              disableCaBundle: false
            allocationBatchWaitTime: 500ms
            apiServerQPS: 400
            apiServerQPSBurst: 500
            disableSecret: false
            generateTLS: true
            healthCheck:
              failureThreshold: 3
              initialDelaySeconds: 3
              periodSeconds: 3
              timeoutSeconds: 1
            http:
              port: 8080
            logLevel: info
            mutatingWebhook:
              disableCaBundle: false
            numWorkers: 100
            pdb:
              minAvailable: 1
            persistentLogs: true
            persistentLogsSizeLimitMB: 10000
            readiness:
              failureThreshold: 3
              initialDelaySeconds: 3
              periodSeconds: 3
            replicas: 1
            safeToEvict: false
            tolerations:
            - effect: NoExecute
              key: agones.dev/agones-system
              operator: Equal
              value: "true"
            validatingWebhook:
              disableCaBundle: false
          featureGates: SDKGracefulTermination=true&CustomFasSyncInterval=true&StateAllocationFilter=true&PlayerAllocationFilter=true&PlayerTracking=true&ResetMetricsOnDelete=true&PodHostname=true&SafeToEvict=true
          image:
            allocator:
              name: agones-allocator
              pullPolicy: IfNotPresent
            controller:
              name: agones-controller
              pullPolicy: IfNotPresent
            extensions:
              name: agones-extensions
              pullPolicy: IfNotPresent
            ping:
              name: agones-ping
              pullPolicy: IfNotPresent
            registry: us-docker.pkg.dev/agones-images/release
            sdk:
              alwaysPull: false
              cpuLimit: 150m
              cpuRequest: 30m
              memoryLimit: 200Mi
              memoryRequest: 50Mi
              name: agones-sdk
            tag: 1.31.0
          metrics:
            prometheusEnabled: true
            prometheusServiceDiscovery: true
            serviceMonitor:
              enabled: true
              interval: 30s
            stackdriverEnabled: false
          ping:
            affinity:
              nodeAffinity:
                preferredDuringSchedulingIgnoredDuringExecution:
                - preference:
                    matchExpressions:
                    - key: agones.dev/agones-system
                      operator: Exists
                  weight: 1
            healthCheck:
              failureThreshold: 5
              initialDelaySeconds: 30
              periodSeconds: 10
              timeoutSeconds: 1
            http:
              expose: true
              port: 8082
              response: ok
              serviceType: LoadBalancer
            install: false
            pdb:
              enabled: false
              minAvailable: 1
            replicas: 1
            resources:
              limits:
                cpu: 400m
                memory: 600Mi
              requests:
                cpu: 100m
                memory: 256Mi
            tolerations:
            - effect: NoExecute
              key: agones.dev/agones-system
              operator: Equal
              value: "true"
            udp:
              expose: true
              port: 30101
              rateLimit: 20
              serviceType: LoadBalancer
          priorityClassName: agones-system
          rbacEnabled: true
          registerApiService: true
          registerServiceAccounts: true
          registerWebhooks: true
          serviceaccount:
            allocator:
              name: agones-allocator
            controller:
              name: agones-controller
            sdk:
              name: agones-sdk
        gameservers:
          maxPort: 34000
          minPort: 32767
          namespaces:
          - default
          - agones-system
          podPreserveUnknownFields: false
        helm:
          installTests: false
  destination:
    namespace: agones-system
    name: in-cluster
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true
    syncOptions:
    - Validate=false
    - CreateNamespace=true
    - PrunePropagationPolicy=foreground
    - PruneLast=true
    - ApplyOutOfSyncOnly=false
    - Prune=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
  ignoreDifferences:
  - group: "agones-sdk-access"
    kind: "ClusterRoleBinding"
  - group: "agones-sdk"
    kind: "ClusterRole"
  - group: "agones-sdk"
    kind: "ServiceAccount"
