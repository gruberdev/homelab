apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: metallb
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: cluster
  source:
    repoURL: 'https://github.com/metallb/metallb.git'
    targetRevision: main
    path: charts/metallb
    helm:
      releaseName: metallb
      values: |
        imagePullSecrets: []
        nameOverride: ""
        fullnameOverride: ""
        loadBalancerClass: ""
        rbac:
          create: true
        prometheus:
          scrapeAnnotations: false
          metricsPort: 7472
          # the name of the secret to be mounted in the speaker pod
          # to expose the metrics securely. If not present, a self signed
          # certificate to be used.
          speakerMetricsTLSSecret: ""
          # the name of the secret to be mounted in the controller pod
          # to expose the metrics securely. If not present, a self signed
          # certificate to be used.
          controllerMetricsTLSSecret: ""
          serviceAccount: ""
          # the namespace where prometheus is deployed
          # required when .Values.prometheus.podMonitor.enabled == true
          namespace: ""
          # the image to be used for the kuberbacproxy container
          rbacProxy:
            repository: gcr.io/kubebuilder/kube-rbac-proxy
            tag: v0.12.0
          # Prometheus Operator PodMonitors
          podMonitor:
            # enable support for Prometheus Operator
            enabled: false
            additionalLabels: {}
            annotations: {}
            # Job label for scrape target
            jobLabel: "app.kubernetes.io/name"
            interval:
            metricRelabelings: []
            relabelings: []
          # Prometheus Operator ServiceMonitors. To be used as an alternative
          # to podMonitor, supports secure metrics.
          serviceMonitor:
            # enable support for Prometheus Operator
            enabled: false
            speaker:
              # optional additional labels for the speaker serviceMonitor
              additionalLabels: {}
              # optional additional annotations for the speaker serviceMonitor
              annotations: {}
              # optional tls configuration for the speaker serviceMonitor, in case
              # secure metrics are enabled.
              tlsConfig:
                insecureSkipVerify: true
            controller:
              additionalLabels: {}
              annotations: {}
              tlsConfig:
                insecureSkipVerify: true
            jobLabel: "app.kubernetes.io/name"
            interval:
            metricRelabelings: []
            relabelings: []
          prometheusRule:
            # enable alertmanager alerts
            enabled: false
            additionalLabels: {}
            annotations: {}
            staleConfig:
              enabled: true
              labels:
                severity: warning
            configNotLoaded:
              enabled: true
              labels:
                severity: warning
            # MetalLBAddressPoolExhausted
            addressPoolExhausted:
              enabled: true
              labels:
                severity: alert
            addressPoolUsage:
              enabled: true
              thresholds:
                - percent: 75
                  labels:
                    severity: warning
                - percent: 85
                  labels:
                    severity: warning
                - percent: 95
                  labels:
                    severity: alert
            bgpSessionDown:
              enabled: true
              labels:
                severity: alert
            extraAlerts: []
        controller:
          enabled: true
          logLevel: info
          image:
            repository: quay.io/metallb/controller
            tag:
            pullPolicy:
          strategy:
            type: Recreate
          serviceAccount:
            # Specifies whether a ServiceAccount should be created
            create: true
            # The name of the ServiceAccount to use. If not set and create is
            # true, a name is generated using the fullname template
            name: ""
            annotations: {}
          securityContext:
            runAsNonRoot: true
            # nobody
            runAsUser: 65534
            fsGroup: 65534
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
          nodeSelector: {}
          tolerations: []
          priorityClassName: ""
          runtimeClassName: ""
          affinity: {}
          podAnnotations: {}
          livenessProbe:
            enabled: true
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            enabled: true
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
        speaker:
          enabled: true
          # command: /speaker
          # -- Speaker log level. Must be one of: `all`, `debug`, `info`, `warn`, `error` or `none`
          logLevel: info
          tolerateMaster: true
          memberlist:
            enabled: true
            mlBindPort: 7946
          image:
            repository: quay.io/metallb/speaker
            tag:
            pullPolicy:
          updateStrategy:
            ## StrategyType
            ## Can be set to RollingUpdate or OnDelete
            ##
            type: RollingUpdate
          serviceAccount:
            # Specifies whether a ServiceAccount should be created
            create: true
            # The name of the ServiceAccount to use. If not set and create is
            # true, a name is generated using the fullname template
            name: ""
            annotations: {}
          ## Defines a secret name for the controller to generate a memberlist encryption secret
          ## By default secretName: {{ "metallb.fullname" }}-memberlist
          ##
          # secretName:
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
          nodeSelector: {}
          tolerations: []
          priorityClassName: ""
          affinity: {}
          ## Selects which runtime class will be used by the pod.
          runtimeClassName: ""
          podAnnotations: {}
          livenessProbe:
            enabled: true
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            enabled: true
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          # frr contains configuration specific to the MetalLB FRR container,
          # for speaker running alongside FRR.
          frr:
            enabled: false
            image:
              repository: frrouting/frr
              tag: v7.5.1
              pullPolicy:
            metricsPort: 7473

            # if set, enables a rbac proxy sidecar container on the speaker to
            # expose the frr metrics via tls.
            # secureMetricsPort: 9121

        crds:
          enabled: true


  destination:
    namespace: metallb-system
    name: in-cluster
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true
    syncOptions:
    - Validate=false
    - CreateNamespace=true
    - PrunePropagationPolicy=background
    - PruneLast=true
    - ApplyOutOfSyncOnly=false
    - Prune=true
    retry:
      limit: -1
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
