apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: percona
spec:
  project: cluster
  source:
    repoURL: https://percona.github.io/percona-helm-charts/
    chart: pxc-db
    targetRevision: 1.12.0
    helm:
      releaseName: percona
      values: |
        finalizers:
          - delete-pxc-pods-in-order
          - delete-proxysql-pvc
          - delete-pxc-pvc
        nameOverride: ""
        fullnameOverride: ""
        operatorImageRepository: percona/percona-xtradb-cluster-operator
        crVersion: 1.12.0
        ignoreAnnotations: []
        ignoreLabels: []
        pause: false
        initImage: ""
        allowUnsafeConfigurations: false
        updateStrategy: SmartUpdate
        upgradeOptions:
          versionServiceEndpoint: https://check.percona.com
          apply: disabled
          schedule: "0 4 * * *"
        enableCRValidationWebhook: false
        tls: {}
        pxc:
          size: 1
          image:
            repository: percona/percona-xtradb-cluster
            tag: 8.0.29-21.1
          autoRecovery: true
          imagePullSecrets: []
          annotations: {}
          labels: {}
          readinessDelaySec: 15
          livenessDelaySec: 300
          resources:
            requests:
              memory: 350Mi
              cpu: 250m
            limits:
              memory: 150Mi
              cpu: 150m
          # runtimeClassName: image-rc
          sidecars: []
          sidecarVolumes: []
          sidecarPVCs: []
          sidecarResources:
            requests:
              memory: 150Mi
              cpu: 50m
            limits:
              memory: 80Mi
              cpu: 20m
          nodeSelector:
            kubernetes.io/hostname: node-two
          affinity:
            antiAffinityTopologyKey: "kubernetes.io/hostname"
          tolerations: []
          gracePeriod: 600
          podDisruptionBudget:
            maxUnavailable: 1
          persistence:
            enabled: true
            storageClass: "iscsi"
            accessMode: ReadWriteOnce
            size: 1Gi
          disableTLS: false
          certManager: false
          readinessProbes:
            initialDelaySeconds: 15
            timeoutSeconds: 15
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 5
          livenessProbes:
            initialDelaySeconds: 300
            timeoutSeconds: 5
            periodSeconds: 25
            successThreshold: 1
            failureThreshold: 3
        haproxy:
          enabled: true
          size: 1
          image: ""
          imagePullSecrets: []
          annotations: {}
          labels: {}
          replicasServiceEnabled: true
          readinessDelaySec: 15
          livenessDelaySec: 300
          resources:
            limits:
              cpu: 150m
              memory: 250Mi
            requests:
              cpu: 50m
              memory: 100Mi
          sidecars: []
          sidecarVolumes: []
          sidecarPVCs: []
          sidecarResources:
            limits:
              cpu: 150m
              memory: 250Mi
            requests:
              cpu: 50m
              memory: 100Mi
          nodeSelector:
            kubernetes.io/hostname: node-two
          affinity:
            antiAffinityTopologyKey: "kubernetes.io/hostname"
          tolerations: []
          gracePeriod: 30
          podDisruptionBudget:
            maxUnavailable: 1
          readinessProbes:
            initialDelaySeconds: 15
            timeoutSeconds: 1
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          livenessProbes:
            initialDelaySeconds: 60
            timeoutSeconds: 5
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 4
        proxysql:
          enabled: false
          size: 3
          image: ""
          imagePullSecrets: []
          annotations: {}
          labels: {}
          readinessDelaySec: 15
          livenessDelaySec: 300
          # envVarsSecret: my-env-var-secrets
          resources:
            limits:
              cpu: 150m
              memory: 250Mi
            requests:
              cpu: 50m
              memory: 100Mi
          sidecars: []
          sidecarVolumes: []
          sidecarPVCs: []
          sidecarResources:
            limits:
              cpu: 150m
              memory: 250Mi
            requests:
              cpu: 50m
              memory: 100Mi
          nodeSelector:
            kubernetes.io/hostname: node-two
          affinity:
            antiAffinityTopologyKey: "kubernetes.io/hostname"
          tolerations: []
          gracePeriod: 30
          podDisruptionBudget:
            maxUnavailable: 1
          persistence:
            enabled: true
            storageClass: "iscsi"
            accessMode: ReadWriteOnce
            size: 1Gi
        logcollector:
          enabled: true
          image: ""
          imagePullSecrets: []
          resources:
            limits:
              cpu: 150m
              memory: 250Mi
            requests:
              cpu: 50m
              memory: 100Mi
        pmm:
          enabled: false
          image:
            repository: percona/pmm-client
            tag: 2.32.0
          imagePullSecrets: []
          serverHost: monitoring-service
          serverUser: admin
          resources:
            limits:
              cpu: 150m
              memory: 250Mi
            requests:
              cpu: 50m
              memory: 100Mi
        backup:
          enabled: true
          image: ""
          # serviceAccountName: percona-xtradb-cluster-operator
          imagePullSecrets: []
          pitr:
            enabled: false
            storageName: s3-us-west-binlogs
            timeBetweenUploads: 60
            resources:
              requests: {}
              limits: {}
          storages:
            fs-pvc:
              type: filesystem
              volume:
                persistentVolumeClaim:
                  storageClassName: iscsi
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 2Gi
            # s3-us-west:
            #   type: s3
            #   verifyTLS: true
            #   nodeSelector:
            #     storage: tape
            #     backupWorker: 'True'
            #   resources:
            #     requests:
            #       memory: 1G
            #       cpu: 600m
            #   affinity:
            #     nodeAffinity:
            #       requiredDuringSchedulingIgnoredDuringExecution:
            #         nodeSelectorTerms:
            #         - matchExpressions:
            #           - key: backupWorker
            #             operator: In
            #             values:
            #             - 'True'
            #   tolerations:
            #     - key: "backupWorker"
            #       operator: "Equal"
            #       value: "True"
            #       effect: "NoSchedule"
            #   annotations:
            #     testName: scheduled-backup
            #   labels:
            #     backupWorker: 'True'
            #   schedulerName: 'default-scheduler'
            #   priorityClassName: 'high-priority'
            #   containerSecurityContext:
            #     privileged: true
            #   podSecurityContext:
            #     fsGroup: 1001
            #     supplementalGroups: [1001, 1002, 1003]
            #   s3:
            #     bucket: S3-BACKUP-BUCKET-NAME-HERE
            #     # Use credentialsSecret OR credentialsAccessKey/credentialsSecretKey
            #     credentialsSecret: my-cluster-name-backup-s3
            #     #credentialsAccessKey: REPLACE-WITH-AWS-ACCESS-KEY
            #     #credentialsSecretKey: REPLACE-WITH-AWS-SECRET-KEY
            #     region: us-west-2
            #     endpointUrl: https://sfo2.digitaloceanspaces.com
            # s3-us-west-binlogs:
            #   type: s3
            #   s3:
            #     bucket: S3-BACKUP-BUCKET-NAME-HERE/DIRECTORY
            #     credentialsSecret: my-cluster-name-backup-s3
            #     region: us-west-2
            #     endpointUrl: https://sfo2.digitaloceanspaces.com
            # azure-blob:
            #   type: azure
            #   azure:
            #     credentialsSecret: azure-secret
            #     container: test
            #     endpointUrl: https://accountName.blob.core.windows.net
            #     storageClass: Hot
          schedule:
            - name: "daily-backup"
              schedule: "0 0 * * *"
              keep: 5
              storageName: fs-pvc
            # - name: "sat-night-backup"
            #   schedule: "0 0 * * 6"
            #   keep: 3
            #   storageName: s3-us-west
        secrets:
          passwords:
            root: <path:kv/data/percona#root-password>
            xtrabackup: <path:kv/data/percona#xtrabackup-password>
            monitor: <path:kv/data/percona#monitor-password>
            clustercheck: <path:kv/data/percona#clustercheck-password>
            proxyadmin: <path:kv/data/percona#proxyadmin-password>
            pmmserver: insecure-pmmserver-password
            # If pmmserverkey is set in that case pmmserver pass will not be included
            # pmmserverkey: set-pmmserver-api-key
            operator: <path:kv/data/percona#operator-password>
            replication: <path:kv/data/percona#replication-password>
          tls: {}
          # logCollector: cluster1-log-collector-secrets
          # vault: keyring-secret-vault
  destination:
    namespace: databases
    name: in-cluster
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true
    syncOptions:
    - Validate=false
    - CreateNamespace=false
    - PrunePropagationPolicy=foreground
    - PruneLast=false
    - ApplyOutOfSyncOnly=false
    - Prune=true
    retry:
      limit: -1
      backoff:
        duration: 20s
        factor: 2
        maxDuration: 15m
