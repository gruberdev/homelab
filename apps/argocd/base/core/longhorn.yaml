apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: longhorn
spec:
  project: cluster
  source:
    repoURL: 'https://github.com/longhorn/longhorn.git'
    targetRevision: master
    path: chart
    helm:
      releaseName: longhorn
      values: |
          global:
            cattle:
              systemDefaultRegistry: ""
              windowsCluster:
                enabled: false
                # Tolerate Linux node taint
                tolerations:
                - key: "cattle.io/os"
                  value: "linux"
                  effect: "NoSchedule"
                  operator: "Equal"
                nodeSelector:
                  kubernetes.io/os: "linux"
                defaultSetting:
                  taintToleration: cattle.io/os=linux:NoSchedule
                  systemManagedComponentsNodeSelector: kubernetes.io/os:linux
          image:
            longhorn:
              engine:
                repository: longhornio/longhorn-engine
                tag: master-head
              manager:
                repository: longhornio/longhorn-manager
                tag: master-head
              ui:
                repository: longhornio/longhorn-ui
                tag: master-head
              instanceManager:
                repository: longhornio/longhorn-instance-manager
                tag: v1_20220920
              shareManager:
                repository: longhornio/longhorn-share-manager
                tag: v1_20220914
              backingImageManager:
                repository: longhornio/backing-image-manager
                tag: v3_20220808
            csi:
              attacher:
                repository: longhornio/csi-attacher
                tag: v3.4.0
              provisioner:
                repository: longhornio/csi-provisioner
                tag: v2.1.2
              nodeDriverRegistrar:
                repository: longhornio/csi-node-driver-registrar
                tag: v2.5.0
              resizer:
                repository: longhornio/csi-resizer
                tag: v1.3.0
              snapshotter:
                repository: longhornio/csi-snapshotter
                tag: v5.0.1
            pullPolicy: IfNotPresent
          service:
            ui:
              type: ClusterIP
              nodePort: null
            manager:
              type: ClusterIP
              nodePort: ""
          persistence:
            defaultClass: true
            defaultFsType: ext4
            defaultClassReplicaCount: 1
            reclaimPolicy: Delete
            migratable: false
            recurringJobSelector:
              enable: false
              jobList: []
            backingImage:
              enable: false
              name: ~
              dataSourceType: ~
              dataSourceParameters: ~
              expectedChecksum: ~
          csi:
            kubeletRootDir: ~
            attacherReplicaCount: ~
            provisionerReplicaCount: ~
            resizerReplicaCount: ~
            snapshotterReplicaCount: ~
          defaultSettings:
            backupTarget: ~
            backupTargetCredentialSecret: ~
            allowRecurringJobWhileVolumeDetached: ~
            createDefaultDiskLabeledNodes: true
            defaultDataPath: ~
            defaultDataLocality: ~
            replicaSoftAntiAffinity: ~
            replicaAutoBalance: ~
            storageOverProvisioningPercentage: ~
            storageMinimalAvailablePercentage: ~
            upgradeChecker: ~
            defaultReplicaCount: ~
            defaultLonghornStaticStorageClass: ~
            backupstorePollInterval: ~
            taintToleration: ~
            systemManagedComponentsNodeSelector: ~
            priorityClass: ~
            autoSalvage: ~
            autoDeletePodWhenVolumeDetachedUnexpectedly: true
            disableSchedulingOnCordonedNode: ~
            replicaZoneSoftAntiAffinity: ~
            nodeDownPodDeletionPolicy: ~
            allowNodeDrainWithLastHealthyReplica: ~
            mkfsExt4Parameters: ~
            disableReplicaRebuild: ~
            replicaReplenishmentWaitInterval: ~
            concurrentReplicaRebuildPerNodeLimit: ~
            disableRevisionCounter: ~
            systemManagedPodsImagePullPolicy: ~
            allowVolumeCreationWithDegradedAvailability: ~
            autoCleanupSystemGeneratedSnapshot: ~
            concurrentAutomaticEngineUpgradePerNodeLimit: ~
            backingImageCleanupWaitInterval: ~
            backingImageRecoveryWaitInterval: ~
            guaranteedEngineManagerCPU: ~
            guaranteedReplicaManagerCPU: ~
            kubernetesClusterAutoscalerEnabled: ~
            orphanAutoDeletion: ~
            storageNetwork: ~
          privateRegistry:
            createSecret: ~
            registryUrl: ~
            registryUser: ~
            registryPasswd: ~
            registrySecret: ~
          longhornManager:
            priorityClass: ~
            tolerations: []
          longhornDriver:
            priorityClass: ~
            tolerations: []
            nodeSelector: {}
          longhornUI:
            replicas: 1
            priorityClass: ~
            tolerations: []
            nodeSelector:
              kubernetes.io/hostname: node-one
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          ingress:
            enabled: false
          enablePSP: false
          namespaceOverride: "longhorn-system"
          # Annotations to add to the Longhorn Manager DaemonSet Pods. Optional.
          annotations: {}
          serviceAccount:
            annotations: {}

  destination:
    namespace: longhorn-system
    name: in-cluster
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true
    syncOptions:
    - Validate=false
    - CreateNamespace=true
    - PrunePropagationPolicy=background
    - PruneLast=true
    - ApplyOutOfSyncOnly=false
    - Prune=true
    retry:
      limit: 10
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
