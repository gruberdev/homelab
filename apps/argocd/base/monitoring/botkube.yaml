apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: botkube
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: monitoring
  source:
    repoURL: https://charts.botkube.io
    chart: botkube
    targetRevision: v1.0.1
    helm:
      releaseName: botkube
      values: |
        actions:
          describe-created-resource:
            bindings:
              executors:
              - k8s-default-tools
              sources:
              - k8s-create-events
            command: kubectl describe {{ .Event.TypeMeta.Kind | lower }}{{ if .Event.Namespace
              }} -n {{ .Event.Namespace }}{{ end }} {{ .Event.Name }}
            displayName: Describe created resource
            enabled: false
          show-logs-on-error:
            bindings:
              executors:
              - k8s-default-tools
              sources:
              - k8s-err-with-logs-events
            command: kubectl logs {{ .Event.TypeMeta.Kind | lower }}/{{ .Event.Name }} -n
              {{ .Event.Namespace }}
            displayName: Show logs on error
            enabled: false
        aliases:
          k:
            command: kubectl
            displayName: Kubectl alias
          kc:
            command: kubectl
            displayName: Kubectl alias
        analytics:
          disable: true
        communications:
          default-group:
            discord:
              botID: <path:kv/data/botkube#discordbot-id>
              channels:
                default:
                  bindings:
                    executors:
                    - k8s-default-tools
                    sources:
                    - k8s-err-events
                    - k8s-recommendation-events
                  id: <path:kv/data/botkube#discord-channel-id>
                  notification:
                    disabled: false
              enabled: true
              token: <path:kv/data/botkube#discordbot-token>
            elasticsearch:
              enabled: false
            mattermost:
              enabled: false
            socketSlack:
              enabled: false
            teams:
              enabled: false
            webhook:
              enabled: false
        config:
          provider:
            endpoint: https://api.botkube.io/graphql
        configWatcher:
          enabled: true
          image:
            pullPolicy: IfNotPresent
            registry: ghcr.io
            repository: kubeshop/k8s-sidecar
            tag: ignore-initial-events
          initialSyncTimeout: 0
          tmpDir: /tmp/watched-cfg/
        containerSecurityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: true
        executors:
          k8s-default-tools:
            botkube/helm:
              config:
                defaultNamespace: default
                helmCacheDir: /tmp/helm/.cache
                helmConfigDir: /tmp/helm/
                helmDriver: secret
              context:
                defaultNamespace: default
                rbac:
                  group:
                    static:
                      values:
                      - botkube-plugins-default
                    type: Static
              enabled: false
            botkube/kubectl:
              config:
                defaultNamespace: default
              context:
                defaultNamespace: default
                rbac:
                  group:
                    static:
                      values:
                      - botkube-plugins-default
                    type: Static
              enabled: false
        extraEnv:
        - name: LOG_LEVEL_SOURCE_BOTKUBE_KUBERNETES
          value: debug
        image:
          pullPolicy: IfNotPresent
          registry: ghcr.io
          repository: kubeshop/botkube
          tag: v1.0.0
        ingress:
          create: false
        kubeconfig:
          base64Config: <path:kv/data/botkube#kubeconfig>
          enabled: true
        plugins:
          cacheDir: /tmp
          repositories:
            botkube:
              url: https://github.com/kubeshop/botkube/releases/download/v1.0.0/plugins-index.yaml
        podSecurityPolicy:
          enabled: false
        rbac:
          create: true
          rules:
          - apiGroups:
            - '*'
            resources:
            - '*'
            verbs:
            - get
            - watch
            - list
          staticGroupName: botkube-plugins-default
        replicaCount: 1
        resources:
          limits:
            cpu: 200m
            memory: 350Mi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        service:
          name: metrics
          port: 2112
          targetPort: 2112
        serviceAccount:
          create: true
        serviceMonitor:
          enabled: false
          interval: 10s
          path: /metrics
          port: metrics
        settings:
          clusterName: not-configured
          healthPort: 2114
          lifecycleServer:
            enabled: true
            port: 2113
          log:
            disableColors: false
            level: info
          persistentConfig:
            runtime:
              configMap:
                name: botkube-runtime-config
              fileName: _runtime_state.yaml
            startup:
              configMap:
                name: botkube-startup-config
              fileName: _startup_state.yaml
          systemConfigMap:
            name: botkube-system
          upgradeNotifier: true
        sources:
          k8s-all-events:
            botkube/kubernetes:
              config:
                event:
                  types:
                  - create
                  - delete
                  - error
                filters:
                  nodeEventsChecker: true
                  objectAnnotationChecker: true
                namespaces:
                  include:
                  - .*
                resources:
                - type: v1/pods
                - type: v1/services
                - type: networking.k8s.io/v1/ingresses
                - type: v1/nodes
                - type: v1/namespaces
                - type: v1/persistentvolumes
                - type: v1/persistentvolumeclaims
                - type: v1/configmaps
                - type: rbac.authorization.k8s.io/v1/roles
                - type: rbac.authorization.k8s.io/v1/rolebindings
                - type: rbac.authorization.k8s.io/v1/clusterrolebindings
                - type: rbac.authorization.k8s.io/v1/clusterroles
                - event:
                    types:
                    - create
                    - update
                    - delete
                    - error
                  type: apps/v1/daemonsets
                  updateSetting:
                    fields:
                    - spec.template.spec.containers[*].image
                    - status.numberReady
                    includeDiff: true
                - event:
                    types:
                    - create
                    - update
                    - delete
                    - error
                  type: batch/v1/jobs
                  updateSetting:
                    fields:
                    - spec.template.spec.containers[*].image
                    - status.conditions[*].type
                    includeDiff: true
                - event:
                    types:
                    - create
                    - update
                    - delete
                    - error
                  type: apps/v1/deployments
                  updateSetting:
                    fields:
                    - spec.template.spec.containers[*].image
                    - status.availableReplicas
                    includeDiff: true
                - event:
                    types:
                    - create
                    - update
                    - delete
                    - error
                  type: apps/v1/statefulsets
                  updateSetting:
                    fields:
                    - spec.template.spec.containers[*].image
                    - status.readyReplicas
                    includeDiff: true
              context:
                defaultNamespace: default
                rbac:
                  group:
                    static:
                      values:
                      - botkube-plugins-default
                    type: Static
              enabled: true
            displayName: Kubernetes Info
          k8s-create-events:
            botkube/kubernetes:
              config:
                event:
                  types:
                  - create
                namespaces:
                  include:
                  - .*
                resources:
                - type: v1/pods
                - type: v1/services
                - type: networking.k8s.io/v1/ingresses
                - type: v1/nodes
                - type: v1/namespaces
                - type: v1/configmaps
                - type: apps/v1/deployments
                - type: apps/v1/statefulsets
                - type: apps/v1/daemonsets
                - type: batch/v1/jobs
              context:
                defaultNamespace: default
                rbac:
                  group:
                    static:
                      values:
                      - botkube-plugins-default
                    type: Static
              enabled: true
            displayName: Kubernetes Resource Created Events
          k8s-err-events:
            botkube/kubernetes:
              config:
                event:
                  types:
                  - error
                namespaces:
                  include:
                  - .*
                resources:
                - type: v1/pods
                - type: v1/services
                - type: networking.k8s.io/v1/ingresses
                - type: v1/nodes
                - type: v1/namespaces
                - type: v1/persistentvolumes
                - type: v1/persistentvolumeclaims
                - type: v1/configmaps
                - type: rbac.authorization.k8s.io/v1/roles
                - type: rbac.authorization.k8s.io/v1/rolebindings
                - type: rbac.authorization.k8s.io/v1/clusterrolebindings
                - type: rbac.authorization.k8s.io/v1/clusterroles
                - type: apps/v1/deployments
                - type: apps/v1/statefulsets
                - type: apps/v1/daemonsets
                - type: batch/v1/jobs
              context:
                defaultNamespace: default
                rbac:
                  group:
                    static:
                      values:
                      - botkube-plugins-default
                    type: Static
              enabled: true
            displayName: Kubernetes Errors
          k8s-err-with-logs-events:
            botkube/kubernetes:
              config:
                event:
                  types:
                  - error
                namespaces:
                  include:
                  - .*
                resources:
                - type: v1/pods
                - type: apps/v1/deployments
                - type: apps/v1/statefulsets
                - type: apps/v1/daemonsets
                - type: batch/v1/jobs
              context:
                defaultNamespace: default
                rbac:
                  group:
                    static:
                      values:
                      - botkube-plugins-default
                    type: Static
              enabled: true
            displayName: Kubernetes Errors for resources with logs
          k8s-recommendation-events:
            botkube/kubernetes:
              config:
                namespaces:
                  include:
                  - .*
                recommendations:
                  ingress:
                    backendServiceValid: true
                    tlsSecretValid: true
                  pod:
                    labelsSet: true
                    noLatestImageTag: true
              context:
                defaultNamespace: default
                rbac:
                  group:
                    static:
                      values:
                      - botkube-plugins-default
                    type: Static
              enabled: true
            displayName: Kubernetes Recommendations
          prometheus:
            botkube/prometheus:
              config:
                alertStates:
                - firing
                - pending
                - inactive
                ignoreOldAlerts: true
                log:
                  level: info
                url: http://localhost:9090
              enabled: false
        ssl:
          enabled: false
  destination:
    namespace: monitoring
    name: in-cluster
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true
    syncOptions:
    - Validate=false
    - CreateNamespace=false
    - PrunePropagationPolicy=foreground
    - PruneLast=false
    - ApplyOutOfSyncOnly=false
    - Prune=true
    retry:
      limit: 5
      backoff:
        duration: 20s
        factor: 2
        maxDuration: 15m
