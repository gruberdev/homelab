apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: drone-kube-runner
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: core
  source:
    repoURL: 'https://github.com/drone/charts.git'
    targetRevision: master
    path: charts/drone-runner-kube
    helm:
      releaseName: drone-kube-runner
      values: |
        image:
          repository: drone/drone-runner-kube
          tag: latest
          pullPolicy: IfNotPresent
        replicaCount: 1
        terminationGracePeriodSeconds: 3600
        nameOverride: ""
        fullnameOverride: ""
        podSecurityContext: {}
        securityContext: {}
        podAnnotations: {}
        service:
          type: ClusterIP
          port: 3000
        ingress:
          enabled: false
          annotations: {}
            # kubernetes.io/ingress.class: nginx
            # kubernetes.io/tls-acme: "true"
          hosts:
            - host: chart-example.local
              paths:
                - path: /
                  pathType: Prefix
          tls: []
          #  - secretName: chart-example-tls
          #    hosts:
          #      - chart-example.local
        resources:
          limits:
            cpu: 250m
            memory: 256Mi
          requests:
            cpu: 80m
            memory: 128Mi
        nodeSelector: {}
        tolerations: []
        affinity: {}
        extraVolumes: []
        extraVolumeMounts: []
        extraSecretNamesForEnvFrom:
          - drone-runner-vars
        rbac:
          buildNamespaces:
            - drone
        serviceAccount:
          annotations: {}
        env:
          DRONE_RUNNER_CAPACITY: 20
          DRONE_NAMESPACE_DEFAULT: "drone"
          DRONE_RPC_SKIP_VERIFY: true
          DRONE_UI_DISABLE: false
          DRONE_SERVER_HOST: "drone"
          DRONE_SERVER_PROTO: "http"
          DRONE_ANNOTATIONS_DEFAULT="server:home,arm:no,docker:no,kubernetes:yes"
          AWS_DEFAULT_REGION: "us-east-1"
          AWS_REGION: "us-east-1"
          DRONE_S3_BUCKET: "drone-storage"

  destination:
    namespace: drone
    name: in-cluster
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true
    syncOptions:
    - Validate=false
    - CreateNamespace=false
    - PrunePropagationPolicy=background
    - PruneLast=true
    - ApplyOutOfSyncOnly=false
    - Prune=true
    retry:
      limit: -1
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
