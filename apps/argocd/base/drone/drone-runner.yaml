apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: drone-runner
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: core
  source:
    repoURL: 'https://github.com/drone/charts.git'
    targetRevision: master
    path: charts/drone-runner-docker
    helm:
      releaseName: drone-runner
      values: |
        hostAliases: []
        # - ip: 10.20.30.40
        #   hostnames:
        #   - gitea-127.0.0.1.sslip.io
        replicaCount: 1
        image:
          repository: drone/drone-runner-docker
          pullPolicy: IfNotPresent
          tag: 1.8.1
        extraVolumes:
          - name: storage
            emptyDir: {}
        extraVolumeMounts: []
        dind:
          repository: docker
          tag: 20-dind
          pullPolicy: IfNotPresent
          command:
            - "dockerd"
          commandArgs:
            - "--host"
            - "tcp://localhost:2375"
          securityContext:
            privileged: true
          extraVolumeMounts:
            - name: storage
              mountPath: /var/lib/docker
              subPath: docker
        gc:
          enabled: true
          repository: drone/gc
          tag: 1.0.0
          pullPolicy: IfNotPresent
          securityContext:
            {}
          env:
            GC_DEBUG: false
            GC_DEBUG_COLOR: "false"
            GC_DEBUG_PRETTY: "false"
            GC_IGNORE_IMAGES: ""
            GC_IGNORE_CONTAINERS: ""
            GC_INTERVAL: "5m"
            GC_CACHE: "5gb"
        imagePullSecrets: []
        terminationGracePeriodSeconds: 3600
        nameOverride: ""
        fullnameOverride: ""
        serviceAccount:
          create: true
          annotations: {}
        podAnnotations: {}
        podSecurityContext: {}
        securityContext: {}
        service:
          type: ClusterIP
          port: 80
        ingress:
          enabled: false
          className: ""
          annotations: {}
          hosts:
            - host: chart-example.local
              paths:
                - path: /
                  pathType: Prefix
          tls: []
        resources:
          limits:
            cpu: 350m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 128Mi
        autoscaling:
          enabled: false
          minReplicas: 1
          maxReplicas: 100
          targetCPUUtilizationPercentage: 80
          # targetMemoryUtilizationPercentage: 80
        nodeSelector:
          kubernetes.io/hostname: node-two
        tolerations: []
        affinity: {}
        extraSecretNamesForEnvFrom:
          - drone-runner-vars
        env:
          DRONE_RUNNER_CAPACITY: "20"
          DRONE_NAMESPACE_DEFAULT: "drone"
          DRONE_RPC_SKIP_VERIFY: "true"
          DRONE_UI_DISABLE: "false"
          DRONE_RPC_HOST: "drone.gr.wtf"
          DRONE_RPC_PROTO: "https"
          DRONE_SERVER_HOST: "drone.gr.wtf"
          DRONE_SERVER_PROTO: "https"

  destination:
    namespace: drone
    name: in-cluster
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true
    syncOptions:
    - Validate=false
    - CreateNamespace=false
    - PrunePropagationPolicy=background
    - PruneLast=true
    - ApplyOutOfSyncOnly=false
    - Prune=true
    retry:
      limit: -1
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
